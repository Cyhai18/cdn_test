(function(e,t){typeof exports=="object"&&typeof module!="undefined"?t(exports,require("@nocobase/client"),require("@nocobase/plugin-auth/client"),require("react/jsx-runtime"),require("@formily/react"),require("antd"),require("react"),require("react-i18next"),require("@nocobase/utils/client")):typeof define=="function"&&define.amd?define(["exports","@nocobase/client","@nocobase/plugin-auth/client","react/jsx-runtime","@formily/react","antd","react","react-i18next","@nocobase/utils/client"],t):(e=typeof globalThis!="undefined"?globalThis:e||self,t(e["@nocobase/plugin-auth-sms"]={},e["@nocobase/client"],e["@nocobase/plugin-auth"],e.jsxRuntime,e["@formily/react"],e.antd,e.react,e["react-i18next"],e["@nocobase/utils"]))})(this,function(e,t,o,i,d,p,m,s,n){"use strict";var g=(e,t,o)=>new Promise((i,d)=>{var p=n=>{try{s(o.next(n))}catch(l){d(l)}},m=n=>{try{s(o.throw(n))}catch(l){d(l)}},s=n=>n.done?i(n.value):Promise.resolve(n.value).then(p,m);s((o=o.apply(e,t)).next())});function l({targetFieldName:r="phone",actionType:h,value:f,onChange:c}){const{t:a}=s.useTranslation(),y=t.useAPIClient(),j=d.useForm(),[u,I]=m.useState(0),S=m.useRef(null);m.useEffect(()=>{u<=0&&S.current&&clearInterval(S.current)},[u]);function M(){return g(this,null,function*(){if(!(u>0))try{const{data:{data:x}}=yield y.resource("verifications").create({values:{type:h,phone:j.values[r]}});p.message.success(a("Operation succeeded")),f&&c("");const P=x.expiresAt?Math.ceil((Date.parse(x.expiresAt)-Date.now())/1e3):60;I(P),S.current=setInterval(()=>{I(w=>w-1)},1e3)}catch(x){n.captureException(x)}})}return i.jsxs("fieldset",{className:t.css`
        display: flex;
        gap: 0.5em;
      `,children:[i.jsx(p.Input,{value:f,onChange:c,placeholder:a("Verification code")}),i.jsx(p.Button,{onClick:M,disabled:u>0,children:u>0?a("Retry after {{count}} seconds",{count:u}):a("Send code")})]})}const v={type:"object",name:"phoneForm","x-component":"Form",properties:{phone:{type:"string",required:!0,"x-component":"Input","x-validator":"phone","x-decorator":"FormItem","x-component-props":{placeholder:'{{t("Phone")}}',style:{}}},code:{type:"string",required:!0,"x-component":"VerificationCode","x-component-props":{actionType:"auth:signIn",targetFieldName:"phone"},"x-decorator":"FormItem"},actions:{title:'{{t("Sign in")}}',type:"void","x-component":"Action","x-component-props":{htmlType:"submit",block:!0,type:"primary",useAction:"{{ useSMSSignIn }}",style:{width:"100%"}}},tip:{type:"void","x-component":"div","x-content":'{{t("User will be registered automatically if not exists.", {ns: "auth-sms"})}}',"x-component-props":{style:{color:"#ccc"}},"x-visible":"{{ autoSignup }}"}}},C=r=>{const h=r.authenticator,{name:f,options:c}=h,a=!!(c!=null&&c.autoSignup),y=()=>o.useSignIn(f);return i.jsx(t.SchemaComponent,{schema:v,scope:{useSMSSignIn:y,autoSignup:a},components:{VerificationCode:l}})},q="auth-sms";function A(){return s.useTranslation(q)}const F=()=>{const{t:r}=A();return i.jsx(t.SchemaComponent,{scope:{t:r},schema:{type:"object",properties:{sms:{type:"void",properties:{public:{type:"object",properties:{autoSignup:{"x-decorator":"FormItem",type:"boolean",title:'{{t("Sign up automatically when the user does not exist")}}',"x-component":"Checkbox"}}}}}}}})},T="SMS";class b extends t.Plugin{load(){return g(this,null,function*(){this.app.pm.get(o).registerType(T,{components:{SignInForm:C,AdminSettingsForm:F}})})}}e.PluginAuthSMSClient=b,e.default=b,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
