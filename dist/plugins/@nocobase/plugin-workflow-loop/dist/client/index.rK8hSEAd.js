(function(n,e){typeof exports=="object"&&typeof module!="undefined"?e(exports,require("@nocobase/client"),require("react/jsx-runtime"),require("@ant-design/icons"),require("@nocobase/plugin-workflow/client"),require("react-i18next")):typeof define=="function"&&define.amd?define(["exports","@nocobase/client","react/jsx-runtime","@ant-design/icons","@nocobase/plugin-workflow/client","react-i18next"],e):(n=typeof globalThis!="undefined"?globalThis:n||self,e(n["@nocobase/plugin-workflow-loop"]={},n["@nocobase/client"],n.jsxRuntime,n["@ant-design/icons"],n["@nocobase/plugin-workflow"],n["react-i18next"]))})(this,function(n,e,o,y,t,k){"use strict";var V=Object.defineProperty,W=Object.defineProperties;var P=Object.getOwnPropertyDescriptors;var O=Object.getOwnPropertySymbols;var F=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable;var I=(n,e,o)=>e in n?V(n,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[e]=o,N=(n,e)=>{for(var o in e||(e={}))F.call(e,o)&&I(n,o,e[o]);if(O)for(var o of O(e))M.call(e,o)&&I(n,o,e[o]);return n},T=(n,e)=>W(n,P(e));var d=(n,e,o)=>(I(n,typeof e!="symbol"?e+"":e,o),o);var v=(n,e,o)=>new Promise((y,t)=>{var k=l=>{try{p(o.next(l))}catch(w){t(w)}},u=l=>{try{p(o.throw(l))}catch(w){t(w)}},p=l=>l.done?y(l.value):Promise.resolve(l.value).then(k,u);p((o=o.apply(n,e)).next())});const u="workflow-loop";function p(f,g={}){const{t:r}=l(g);return r(f)}function l(f){return k.useTranslation(u,f)}function w(f,g){let r=f,h=null;for(let a=0;a<g.length;a++){const c=g[a],s=r.find(b=>b.value===c);if(!s)return null;h=s,!s.isLeaf&&s.loadChildren&&s.loadChildren(s),s.children&&(r=s.children)}return h}class j extends t.Instruction{constructor(){super(...arguments);d(this,"title",`{{t("Loop", { ns: "${u}" })}}`);d(this,"type","loop");d(this,"group","control");d(this,"description",`{{t("By using a loop node, you can perform the same operation on multiple sets of data. The source of these sets can be either multiple records from a query node or multiple associated records of a single record. Loop node can also be used for iterating a certain number of times or for looping through each character in a string. However, excessive looping may cause performance issues, so use with caution.", { ns: "${u}" })}}`);d(this,"icon",o.jsx(y.RollbackOutlined,{}));d(this,"fieldset",{target:{type:"string",title:`{{t("Loop target", { ns: "${u}" })}}`,description:`{{t("A single number will be treated as a loop count, a single string will be treated as an array of characters, and other non-array values will be converted to arrays. The loop node ends when the loop count is reached, or when the array loop is completed. You can also add condition nodes to the loop to terminate it.", { ns: "${u}" })}}`,"x-decorator":"FormItem","x-component":"WorkflowVariableInput","x-component-props":{changeOnSelect:!0,useTypedConstant:["string","number","null"],className:e.css`
          width: 100%;

          .variable {
            flex: 1;
          }

          .ant-input.null-value {
            width: 100%;
          }
        `},required:!0}});d(this,"components",{WorkflowVariableInput:t.WorkflowVariableInput})}Component({data:r}){var s;const{nodes:h}=t.useFlowContext(),{styles:a}=t.useStyles(),c=h.find(b=>b.upstreamId===r.id&&b.branchIndex!=null);return o.jsx(t.NodeDefaultView,{data:r,children:o.jsx("div",{className:a.nodeSubtreeClass,children:o.jsxs("div",{className:e.cx(a.branchBlockClass,e.css`
                padding-left: 20em;
              `),children:[o.jsx(t.Branch,{from:r,entry:c,branchIndex:(s=c==null?void 0:c.branchIndex)!=null?s:0}),o.jsxs("div",{className:a.branchClass,children:[o.jsx("div",{className:"workflow-branch-lines"}),o.jsx("div",{className:e.cx(a.addButtonClass,a.loopLineClass),children:o.jsx(y.ArrowUpOutlined,{})})]})]})})})}useScopeVariables(r,h){const a=e.useCompile(),c=p("Loop target"),s=p("Loop index"),b=p("Loop length"),{target:x}=r.config;if(!x)return null;const{fieldNames:i=t.defaultFieldNames}=h;let L={key:"item",[i.value]:"item",[i.label]:c};if(typeof x=="string"&&x.startsWith("{{")&&x.endsWith("}}")){const S=x.slice(2,-2).split(".").map(m=>m.trim()),A=[t.scopeOptions,t.nodesOptions,t.triggerOptions].map(m=>{const C=m.useOptions(T(N({},h),{current:r})).filter(Boolean);return{[i.label]:a(m.label),[i.value]:m.value,key:m.value,[i.children]:C,disabled:C&&!C.length}}),B=w(A,S);L=Object.assign({},B,L)}return[L,{key:"index",[i.value]:"index",[i.label]:s},{key:"length",[i.value]:"length",[i.label]:b}]}}class q extends e.Plugin{afterAdd(){return v(this,null,function*(){})}beforeLoad(){return v(this,null,function*(){})}load(){return v(this,null,function*(){this.app.pm.get("workflow").registerInstruction("loop",j)})}}n.default=q,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
