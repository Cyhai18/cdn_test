(function(e,o){typeof exports=="object"&&typeof module!="undefined"?o(exports,require("@nocobase/client"),require("react/jsx-runtime"),require("@ant-design/icons"),require("@formily/antd-v5"),require("@nocobase/plugin-workflow/client"),require("react-i18next")):typeof define=="function"&&define.amd?define(["exports","@nocobase/client","react/jsx-runtime","@ant-design/icons","@formily/antd-v5","@nocobase/plugin-workflow/client","react-i18next"],o):(e=typeof globalThis!="undefined"?globalThis:e||self,o(e["@nocobase/plugin-workflow-request"]={},e["@nocobase/client"],e.jsxRuntime,e["@ant-design/icons"],e["@formily/antd-v5"],e["@nocobase/plugin-workflow"]))})(this,function(e,o,r,m,l,s){"use strict";var f=Object.defineProperty;var b=(e,o,r)=>o in e?f(e,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[o]=r;var a=(e,o,r)=>(b(e,typeof o!="symbol"?o+"":o,r),r);var d=(e,o,r)=>new Promise((m,l)=>{var s=n=>{try{p(r.next(n))}catch(i){l(i)}},t=n=>{try{p(r.throw(n))}catch(i){l(i)}},p=n=>n.done?m(n.value):Promise.resolve(n.value).then(s,t);p((r=r.apply(e,o)).next())});const t="workflow-request";class p extends s.Instruction{constructor(){super(...arguments);a(this,"title",`{{t("HTTP request", { ns: "${t}" })}}`);a(this,"type","request");a(this,"group","extended");a(this,"description",`{{t("Send HTTP request to a URL. You can use the variables in the upstream nodes as request headers, parameters and request body.", { ns: "${t}" })}}`);a(this,"icon",r.jsx(m.GlobalOutlined,{}));a(this,"fieldset",{method:{type:"string",required:!0,title:`{{t("HTTP method", { ns: "${t}" })}}`,"x-decorator":"FormItem","x-component":"Select","x-component-props":{showSearch:!1,allowClear:!1,className:"auto-width"},enum:[{label:"GET",value:"GET"},{label:"POST",value:"POST"},{label:"PUT",value:"PUT"},{label:"PATCH",value:"PATCH"},{label:"DELETE",value:"DELETE"}],default:"POST"},url:{type:"string",required:!0,title:`{{t("URL", { ns: "${t}" })}}`,"x-decorator":"FormItem","x-decorator-props":{},"x-component":"WorkflowVariableTextArea","x-component-props":{placeholder:"https://www.nocobase.com"}},headers:{type:"array","x-component":"ArrayItems","x-decorator":"FormItem",title:`{{t("Headers", { ns: "${t}" })}}`,description:`{{t('"Content-Type" only support "application/json", and no need to specify', { ns: "${t}" })}}`,items:{type:"object",properties:{space:{type:"void","x-component":"Space",properties:{name:{type:"string","x-decorator":"FormItem","x-component":"Input","x-component-props":{placeholder:'{{t("Name")}}'}},value:{type:"string","x-decorator":"FormItem","x-component":"WorkflowVariableInput","x-component-props":{useTypedConstant:!0}},remove:{type:"void","x-decorator":"FormItem","x-component":"ArrayItems.Remove"}}}}},properties:{add:{type:"void",title:`{{t("Add request header", { ns: "${t}" })}}`,"x-component":"ArrayItems.Addition"}}},params:{type:"array","x-component":"ArrayItems","x-decorator":"FormItem",title:`{{t("Parameters", { ns: "${t}" })}}`,items:{type:"object",properties:{space:{type:"void","x-component":"Space",properties:{name:{type:"string","x-decorator":"FormItem","x-component":"Input","x-component-props":{placeholder:'{{t("Name")}}'}},value:{type:"string","x-decorator":"FormItem","x-component":"WorkflowVariableInput","x-component-props":{useTypedConstant:!0}},remove:{type:"void","x-decorator":"FormItem","x-component":"ArrayItems.Remove"}}}}},properties:{add:{type:"void",title:`{{t("Add parameter", { ns: "${t}" })}}`,"x-component":"ArrayItems.Addition"}}},data:{type:"string",title:`{{t("Body", { ns: "${t}" })}}`,"x-decorator":"FormItem","x-decorator-props":{},"x-component":"WorkflowVariableJSON","x-component-props":{changeOnSelect:!0,autoSize:{minRows:10},placeholder:`{{t("Input request data", { ns: "${t}" })}}`},description:`{{t("Only support standard JSON data", { ns: "${t}" })}}`},timeout:{type:"number",title:`{{t("Timeout config", { ns: "${t}" })}}`,"x-decorator":"FormItem","x-decorator-props":{},"x-component":"InputNumber","x-component-props":{addonAfter:`{{t("ms", { ns: "${t}" })}}`,min:1,step:1e3,defaultValue:5e3}},ignoreFail:{type:"boolean",title:`{{t("Ignore failed request and continue workflow", { ns: "${t}" })}}`,"x-decorator":"FormItem","x-component":"Checkbox"},retryErrorCount:{type:"boolean",title:`{{t("Failed request retry count", { ns: "${t}" })}}`,"x-decorator":"FormItem","x-component":"InputNumber","x-component-props":{min:1,defaultValue:5}}});a(this,"components",{ArrayItems:l.ArrayItems,WorkflowVariableInput:s.WorkflowVariableInput,WorkflowVariableTextArea:s.WorkflowVariableTextArea,WorkflowVariableJSON:s.WorkflowVariableJSON})}useVariables({key:x,title:y},{types:w,fieldNames:c=s.defaultFieldNames}){return{[c.value]:x,[c.label]:y}}}class n extends o.Plugin{afterAdd(){return d(this,null,function*(){})}beforeLoad(){return d(this,null,function*(){})}load(){return d(this,null,function*(){this.app.pm.get("workflow").registerInstruction("request",p)})}}e.default=n,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
