(function(o,t){typeof exports=="object"&&typeof module!="undefined"?t(exports,require("@nocobase/client"),require("@nocobase/plugin-workflow/client"),require("react/jsx-runtime"),require("@ant-design/icons"),require("react-i18next"),require("@formily/react")):typeof define=="function"&&define.amd?define(["exports","@nocobase/client","@nocobase/plugin-workflow/client","react/jsx-runtime","@ant-design/icons","react-i18next","@formily/react"],t):(o=typeof globalThis!="undefined"?globalThis:o||self,t(o["@ashley/plugin-workflow-request-interception"]={},o["@nocobase/client"],o["@nocobase/plugin-workflow"],o.jsxRuntime,o["@ant-design/icons"],o["react-i18next"],o["@formily/react"]))})(this,function(o,t,e,w,p,h,b){"use strict";var E=Object.defineProperty,v=Object.defineProperties;var D=Object.getOwnPropertyDescriptors;var F=Object.getOwnPropertySymbols;var O=Object.prototype.hasOwnProperty,j=Object.prototype.propertyIsEnumerable;var T=(o,t,e)=>t in o?E(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e,g=(o,t)=>{for(var e in t||(t={}))O.call(t,e)&&T(o,e,t[e]);if(F)for(var e of F(t))j.call(t,e)&&T(o,e,t[e]);return o},f=(o,t)=>v(o,D(t));var n=(o,t,e)=>(T(o,typeof t!="symbol"?t+"":t,e),e);var P=(o,t,e)=>new Promise((w,p)=>{var h=r=>{try{i(e.next(r))}catch(u){p(u)}},b=r=>{try{i(e.throw(r))}catch(u){p(u)}},i=r=>r.done?w(r.value):Promise.resolve(r.value).then(h,b);i((e=e.apply(o,t)).next())});const i="@ashley/plugin-workflow-request-interception";function r(c,l={}){const{t:s}=u(l);return s(c)}function u(c){return h.useTranslation(i,c)}class R extends e.Instruction{constructor(){super(...arguments);n(this,"title",`{{t("Response Message", { ns: "${i}" })}}`);n(this,"type","response-message");n(this,"group","extended");n(this,"description",`{{t("Add response message, will be send to client when process of request ends.", { ns: "${i}" })}}`);n(this,"icon",w.jsx(p.ProfileOutlined,{}));n(this,"fieldset",{message:{type:"string",required:!0,title:`{{t("Message Content", { ns: "${i}" })}}`,"x-decorator":"FormItem","x-decorator-props":{},"x-component":"WorkflowVariableTextArea","x-component-props":{placeholder:""}}});n(this,"components",{WorkflowVariableTextArea:e.WorkflowVariableTextArea})}useVariables({key:s,title:a},{types:k,fieldNames:d=e.defaultFieldNames}){return{[d.value]:s,[d.label]:a}}}const I={CREATE:"create",UPDATE:"update",UPSERT:"updateOrCreate",DESTROY:"destroy"};class $ extends e.Trigger{constructor(){super(...arguments);n(this,"sync",!0);n(this,"title",`{{t("Pre-action event", { ns: "${i}" })}}`);n(this,"description",`{{t('Triggered before the execution of a request initiated through an action button or API, such as before adding, updating data. Suitable for data validation and logic judgment before action, and the request could be rejected by using the "End process" node.', { ns: "${i}" })}}`);n(this,"fieldset",{collection:{type:"string",required:!0,"x-decorator":"FormItem","x-decorator-props":{tooltip:`{{t("The collection to which the triggered data belongs.", { ns: "${i}" })}}`},"x-component":"DataSourceCollectionCascader","x-disabled":"{{ useWorkflowAnyExecuted() }}",title:`{{t("Collection", { ns: "${i}" })}}`,"x-reactions":[{target:"appends",effects:["onFieldValueChange"],fulfill:{state:{value:[]}}}]},global:{type:"boolean",title:`{{t("Trigger mode", { ns: "${i}" })}}`,"x-decorator":"FormItem","x-component":"RadioWithTooltip","x-component-props":{direction:"vertical",options:[{label:`{{t("Local mode, triggered after the completion of actions bound to this workflow", { ns: "${i}" })}}`,value:!1},{label:`{{t("Global mode, triggered after the completion of the following actions", { ns: "${i}" })}}`,value:!0}]},default:!1,"x-reactions":[{dependencies:["collection"],fulfill:{state:{visible:"{{!!$deps[0]}}"}}}]},actions:{type:"number",title:`{{t("Select actions", { ns: "${i}" })}}`,"x-decorator":"FormItem","x-component":"CheckboxGroupWithTooltip","x-component-props":{direction:"vertical",options:[{label:`{{t("Create record action", { ns: "${i}" })}}`,value:I.CREATE},{label:`{{t("Update record action", { ns: "${i}" })}}`,value:I.UPDATE}]},required:!0,"x-reactions":[{dependencies:["collection","global"],fulfill:{state:{visible:"{{!!$deps[0] && !!$deps[1]}}"}}}]},appends:{type:"array",title:`{{t("Associations to use", { ns: "${i}" })}}`,description:'{{t("Please select the associated fields that need to be accessed in subsequent nodes. With more than two levels of to-many associations may cause performance issue, please use with caution.", { ns: "workflow" })}}',"x-decorator":"FormItem","x-component":"AppendsTreeSelect","x-component-props":{title:"Preload associations",multiple:!0,useCollection(){const{values:s}=b.useForm();return s==null?void 0:s.collection}},"x-reactions":[{dependencies:["collection"],fulfill:{state:{visible:"{{!!$deps[0]}}"}}}]}});n(this,"scope",{useCollectionDataSource:t.useCollectionDataSource,useWorkflowAnyExecuted:e.useWorkflowAnyExecuted});n(this,"components",{RadioWithTooltip:e.RadioWithTooltip,CheckboxGroupWithTooltip:e.CheckboxGroupWithTooltip});n(this,"isActionTriggerable",(s,a)=>a.action==="customize:triggerWorkflows"||["create","update","customize:update"].includes(a.action)&&!s.global)}useVariables(s,a){var S;const k=t.useCompile(),{getCollectionFields:d}=t.useCollectionManager_deprecated(),z=r("Trigger data"),C=r("User submitted action"),W=r("Role of user submitted action"),y=[{collectionName:s.collection,name:"data",type:"hasOne",target:s.collection,uiSchema:{title:z}},{collectionName:"users",name:"user",type:"hasOne",target:"users",uiSchema:{title:C}},{name:"roleName",uiSchema:{title:W}}];return e.getCollectionFieldOptions(f(g({appends:["data","user",...((S=s.appends)==null?void 0:S.map(q=>`data.${q}`))||[]]},a),{fields:y,compile:k,getCollectionFields:d}))}useInitializers(s){return s.collection?{name:"triggerData",type:"item",key:"triggerData",title:`{{t("Trigger data", { ns: "${i}" })}}`,Component:e.CollectionBlockInitializer,collection:s.collection,dataPath:"$context.data"}:null}}const A={name:"submitToWorkflow",title:'{{t("Submit to workflow", { ns: "workflow" })}}',Component:"CustomizeActionInitializer",schema:{title:'{{t("Submit to workflow", { ns: "workflow" })}}',"x-component":"Action","x-use-component-props":"useTriggerWorkflowsActionProps","x-designer":"Action.Designer","x-action-settings":{skipValidator:!1,onSuccess:{manualClose:!0,redirecting:!1,successMessage:'{{t("Submitted successfully")}}'},triggerWorkflows:[]},"x-action":"customize:triggerWorkflows"}},m={name:"submitToWorkflow",title:'{{t("Submit to workflow", { ns: "workflow" })}}',Component:"CustomizeActionInitializer",schema:{title:'{{t("Submit to workflow", { ns: "workflow" })}}',"x-component":"Action","x-use-component-props":"useRecordTriggerWorkflowsActionProps","x-designer":"Action.Designer","x-action-settings":{onSuccess:{manualClose:!0,redirecting:!1,successMessage:'{{t("Submitted successfully")}}'},triggerWorkflows:[]},"x-action":"customize:triggerWorkflows"}},x=f(g({},m),{schema:f(g({},m.schema),{"x-component":"Action.Link"})});class M extends t.Plugin{load(){return P(this,null,function*(){const l=this.app.pm.get("workflow");l.registerInstruction("response-message",R),l.registerTrigger("request-interception",$),this.app.addScopes({useTriggerWorkflowsActionProps:e.useTriggerWorkflowsActionProps,useRecordTriggerWorkflowsActionProps:e.useRecordTriggerWorkflowsActionProps}),this.app.schemaInitializerManager.get("FormActionInitializers").add("customize.submitToWorkflow",A),this.app.schemaInitializerManager.get("createForm:configureActions").add("customize.submitToWorkflow",A),this.app.schemaInitializerManager.get("editForm:configureActions").add("customize.submitToWorkflow",A),this.app.schemaInitializerManager.get("detailsWithPaging:configureActions").add("customize.submitToWorkflow",m),this.app.schemaInitializerManager.get("details:configureActions").add("customize.submitToWorkflow",m),this.app.schemaInitializerManager.get("table:configureItemActions").add("customize.submitToWorkflow",x),this.app.schemaInitializerManager.get("gridCard:configureItemActions").add("customize.submitToWorkflow",x),this.app.schemaInitializerManager.get("list:configureItemActions").add("customize.submitToWorkflow",x)})}}o.default=M,Object.defineProperties(o,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
